#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>

void printOddNumbers()
{
    pid_t pid = getpid();
    printf("Child process 1 with PID %d printing odd numbers: ", pid);
    for (int i = 1; i <= 10; i += 2) {
        printf("%d ", i);
    }
    printf("\n");
}

void printEvenNumbers()
{
    pid_t pid = getpid();
    printf("Child process 2 with PID %d printing even numbers: ", pid);
    for (int i = 2; i <= 10; i += 2) {
        printf("%d ", i);
    }
    printf("\n");
}

void printMultiplesOfThree()
{
    pid_t pid = getpid();
    printf("Child process 3 with PID %d printing multiples of 3: ", pid);
    for (int i = 3; i <= 30; i += 3) {
        printf("%d ", i);
    }
    printf("\n");
}

void printMultiplesOfFive()
{
    pid_t pid = getpid();
    printf("Child process 4 with PID %d printing multiples of 5: ", pid);
    for (int i = 5; i <= 50; i += 5) {
        printf("%d ", i);
    }
    printf("\n");
}

int main()
{
    pid_t pid1, pid2, pid3, pid4;

    pid1 = fork();
    if (pid1 == 0) {
        printOddNumbers();
        exit(0);
    }

    pid2 = fork();
    if (pid2 == 0) {
        printEvenNumbers();
        exit(0);
    }

    pid3 = fork();
    if (pid3 == 0) {
        printMultiplesOfThree();
        exit(0);
    }

    pid4 = fork();
    if (pid4 == 0) {
        printMultiplesOfFive();
        exit(0);
    }

    return 0;
}

//OUTPUT//

Child process 1 with PID 23456 printing odd numbers: 1 3 5 7 9 
Child process 2 with PID 23457 printing even numbers: 2 4 6 8 10 
Child process 3 with PID 23458 printing multiples of 3: 3 6 9 12 15 18 21 24 27 30 
Child process 4 with PID 23459 printing multiples of 5: 5 10 15 20 25 30 35 40 45 50
