#include <stdio.h>

struct process {
    int pid;
    int burst_time;
    int arrival_time;
    int waiting_time;
    int turnaround_time;
};

int main() {
    struct process p[3] = { {0, 2, 0, 0, 0}, {1, 4, 0, 0, 0}, {2, 8, 0, 0, 0} };
    int n = 3, total_waiting_time = 0, total_turnaround_time = 0;
    float avg_waiting_time, avg_turnaround_time;

    for (int i = 0; i < n; i++) {
        if (i == 0) {
            p[i].arrival_time = 0;
        }
        else {
            p[i].arrival_time = p[i-1].arrival_time + p[i-1].burst_time;
        }

        p[i].waiting_time = p[i].arrival_time;
        p[i].turnaround_time = p[i].waiting_time + p[i].burst_time;

        total_waiting_time += p[i].waiting_time;
        total_turnaround_time += p[i].turnaround_time;
    }

    avg_waiting_time = (float) total_waiting_time / n;
    avg_turnaround_time = (float) total_turnaround_time / n;

    printf("Process\tBurst Time\tArrival Time\tWaiting Time\tTurnaround Time\n");
    for (int i = 0; i < n; i++) {
        printf("%d\t%d\t\t%d\t\t%d\t\t%d\n", p[i].pid, p[i].burst_time, p[i].arrival_time, p[i].waiting_time, p[i].turnaround_time);
    }

    printf("Average Waiting Time = %.2f\n", avg_waiting_time);
    printf("Average Turnaround Time = %.2f\n", avg_turnaround_time);

    return 0;
}

//OUTPUT//

Process Burst Time  Arrival Time    Waiting Time    Turnaround Time
0       2           0               0               2
1       4           2               2               6
2       8           6               6               14
Average Waiting Time = 2.67
Average Turnaround Time = 7.33
